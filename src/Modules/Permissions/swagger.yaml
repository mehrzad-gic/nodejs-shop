openapi: 3.0.0
info:
  title: Permission API
  version: 1.0.0
  description: API for managing permissions and role-permission assignments

paths:
  /permissions:
    get:
      summary: Get all permissions
      description: Retrieve a list of permissions with pagination
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Permission'
                  total:
                    type: integer
                  page:
                    type: integer
                  limit:
                    type: integer

    post:
      summary: Create new permission
      description: Create a new permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionInput'
      responses:
        '201':
          description: Permission created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Permission'

  /permissions/{slug}:
    get:
      summary: Get single permission
      description: Retrieve a single permission by slug
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Permission details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Permission'

    put:
      summary: Update permission
      description: Update an existing permission
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionInput'
      responses:
        '200':
          description: Permission updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Permission'

    delete:
      summary: Delete permission
      description: Delete an existing permission
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Permission deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /permissions/{slug}/status:
    patch:
      summary: Change permission status
      description: Toggle the status of a permission (active/inactive)
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Permission status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Permission'

  /permissions/assign:
    post:
      summary: Assign permissions to role
      description: Assign multiple permissions to a role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role_id
                - permissions
              properties:
                role_id:
                  type: integer
                  description: ID of the role
                permissions:
                  type: array
                  items:
                    type: integer
                  description: Array of permission IDs
      responses:
        '200':
          description: Permissions assigned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: integer

components:
  schemas:
    Permission:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        status:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    PermissionInput:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 50
        description:
          type: string
          minLength: 10
          maxLength: 255 